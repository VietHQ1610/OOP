abstract class Product {
    protected String name;
    protected double price;
    protected int quantity;

    public Product(String name, double price, int quantity) {
        this.name = name;
        this.price = price;
        this.quantity = quantity;
    }

    public abstract double calculateCost(int quantity);

    public void displayDetails() {
        System.out.println("Name: " + name);
        System.out.println("Price: $" + price);
        System.out.println("Available Quantity: " + quantity);
    }
}

class Book extends Product {
    private String author;

    public Book(String name, double price, int quantity, String author) {
        super(name, price, quantity);
        this.author = author;
    }

    @Override
    public double calculateCost(int quantity) {
        return price * quantity;
    }

    @Override
    public void displayDetails() {
        super.displayDetails();
        System.out.println("Author: " + author);
    }
}

class Electronics extends Product {
    private String brand;

    public Electronics(String name, double price, int quantity, String brand) {
        super(name, price, quantity);
        this.brand = brand;
    }

    @Override
    public double calculateCost(int quantity) {
        return price * quantity * 1.1; 
    }

    @Override
    public void displayDetails() {
        super.displayDetails();
        System.out.println("Brand: " + brand);
    }
}

class User {
    private String username;
    private double totalSpent;

    public User(String username) {
        this.username = username;
        this.totalSpent = 0;
    }

    public String getUsername() {
        return username;
    }

    public double getTotalSpent() {
        return totalSpent;
    }

    public void buyProduct(Product product, int quantity) {
        if (quantity <= product.quantity) {
            double totalPrice = product.calculateCost(quantity);
            totalSpent += totalPrice;
            product.quantity -= quantity; 
            System.out.printf("User: %s bought %d %s for $%.1f%n", username, quantity, product.name, totalPrice);
        } else {
            System.out.printf("Insufficient quantity of %s available.%n", product.name);
        }
    }
}

public class Main {
    public static void main(String[] args) {
        Electronics laptop = new Electronics("laptop", 20.0, 10, "Dell");
        Book harryPotter = new Book("Harry Potter", 10.0, 12, "camnh");

        User user1 = new User("Alice");
        User user2 = new User("Bob");
        User user3 = new User("Charlie");

        user1.buyProduct(laptop, 3);
        user1.buyProduct(harryPotter, 10);
        user2.buyProduct(laptop, 1);
        user3.buyProduct(harryPotter, 5);

        System.out.println("====");
        System.out.println("Users with Highest Total Spent:");
        User[] users = {user1, user2, user3};
        for (int i = 0; i < users.length; i++) {
            for (int j = i + 1; j < users.length; j++) {
                if (users[i].getTotalSpent() < users[j].getTotalSpent()) {
                    User temp = users[i];
                    users[i] = users[j];
                    users[j] = temp;
                }
            }
        }
        for (int i = 0; i < users.length; i++) {
            System.out.printf("%d. %s: $%.1f%n", i + 1, users[i].getUsername(), users[i].getTotalSpent());
        }

        System.out.println("====");
        laptop.displayDetails();
        System.out.println("---");
        harryPotter.displayDetails();
    }
}
